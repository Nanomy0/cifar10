1.数据集加载和标准化
2.定义网络结构和前向传播方式
3.定义优化器和损失函数
4.训练网络（学习率等参数可以调整）保存权重
5.加载权重并测试

task1:复习卷积和池化
task2:学习常见的优化器（adam SGD GD）和损失函数（MSE ME 交叉熵） 学习激活函数（relu sigmoid softmax）
task3：复习网络的定义和前向传播 
task4：在网络最后一层加上softmax函数进行训练，查看效果？如果不能说明原
（1）在神经网络的多分类任务中，通常在最后一层使用softmax函数是常见的做法。Softmax函数将网络的原始输出转换为概率分布，使得每个类别的输出都在0到1之间，并且所有类别的输出概率之和为1。x = F.softmax(self.fc3(x), dim=1)
（2）但由于使用了CrossEntropyLoss，它已经内置了softmax操作（softmax是交叉熵损失计算的内置前几步骤），因此在网络的最后一层不需要显式添加softmax。可以在网络的输出层直接使用原始的、未经过softmax的值。
task5: 迁移到jupyter notebook里

羊体尺（身高和体长）
缘由需要逻辑自洽
构成部分：1.硬件2.算法3.软件
1.Intel realsense d435i深度相机可以采集RGB+深度信息（就是距离信息）把采集到的深度信息对齐到RGB上 就可知每个像素点到镜头的距离
并将采集的数据保存为.npy格式 numpy的数组的最常见的保存形式
2.
2.1先找羊（1)数据集使用深度相机拍了1212张羊图片，然后华为云modelart上标注了躯干（羊体长是髻甲凸到臀点的距离，身高是肩点到地面垂直距离）并转换为YOLO格式
（2）数据集划分9：1开
（3)训练 a.加载预训练模型的权重（COCO128上训练10个epoch）b.华为云上训练 100epoch YOLO v5（backbone darknet34）
（4)评价使用的指标是MAP，结果见论文 
找的不错
2.2 找两个点 肩点是目标检测框左边界的邻域（限定在羊体范围内）的质心；臀点是检测框右边界邻域范围的质心
2.3 根据视场角69°x42.5°可知单位像素（640x480）对应的角度 根据三角函数计算可得羊体尺的结果
3. Pyside2 + QtDesigner
